{{- $envOverrides := index .Values (tpl (default .Chart.Name .Values.name) .) -}}
  {{- $baseValues := .Values | deepCopy -}}
  {{- $values := dict "Values" (mustMergeOverwrite $baseValues $envOverrides) -}}
  {{- with mustMergeOverwrite . $values -}}
  {{- if .Values.persistence.enabled }}
apiVersion: v1
kind: "PersistentVolume"
metadata:
  name: {{ .Chart.Name }}-data
  labels:
    app: {{ .Chart.Name }}
    group: {{ .Values.labels.group }}
{ { - if $.Values.persistence.aws } }
    failure-domain.beta.kubernetes.io/zone: { { $.Values "persistence" "aws" "zone" } }
    topology.kubernetes.io/zone: { { $.Values "persistence" "aws" "zone" } }
{ { - end } }
spec:
  capacity:
    storage: {{ .Values.persistence.dataDirSize | quote }}
  accessModes:
    - {{ .Values.persistence.accessMode | quote }}
  persistentVolumeReclaimPolicy: Recycle
  claimRef:
    namespace: {{ .Values.namespace }}
    name: {{ .Chart.Name }}-data
  {{- if .Values.persistence.aws }}
  awsElasticBlockStore:
    volumeID: {{ $.Values "persistence" "aws" "volumeId" }}
    fsType: ext4
  {{- end }}
  { { - if $.Values.persistence.azure } }
  azureDisk:
    cachingMode: ReadWrite
    diskName: { { index $.Values "persistence" "azure" $idx "diskName" } }
    diskURI: { { index $.Values "persistence" "azure" $idx "diskUri" } }
    kind: Managed
    fsType: ext4
  { { - end } }
  { { - if $.Values.persistence.openstack } }
  cinder:
    fsType: "ext4"
    volumeID: { { index $.Values "persistence" "openstack" $idx } }
  { { - end } }
  { { - if $.Values.persistence.iscsi } }
  iscsi:
    targetPortal: { { index $.Values "persistence" "iscsi" "targetPortal" } }
    iqn: { { index $.Values "persistence" "iscsi" "iqn" $idx } }
    lun: 0
    fsType: 'ext4'
    readOnly: true
  { { - end } }
---
{{- end }}
{{- end }}